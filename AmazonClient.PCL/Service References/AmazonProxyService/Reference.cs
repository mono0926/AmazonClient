//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mono.Api.AmazonClient.AmazonProxyService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Mono.Api.AmazonProxyService")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryType", Namespace="http://schemas.datacontract.org/2004/07/Mono.Api.AmazonApi")]
    public enum CountryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        US = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Japan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Germany = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        France = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canada = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UK = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchIndexType", Namespace="http://schemas.datacontract.org/2004/07/Mono.Api.AmazonApi")]
    public enum SearchIndexType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Apparel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Appliances = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArtsAndCrafts = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Automotive = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Baby = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Beauty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blended = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Books = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Classical = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collectibles = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DigitalMusic = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DVD = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Electronics = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignBooks = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GourmetFood = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grocery = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthPersonalCare = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hobbies = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HomeGarden = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HomeImprovement = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Industrial = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jewelry = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KindleStore = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kitchen = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LawnGardern = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lighting = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Magazines = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Merchants = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miscellaneous = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileApps = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MP3Downloads = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Music = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MusicalInstruments = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MusicTracks = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfficeProducts = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutdoorLiving = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outlet = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCHardware = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PetSupplies = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Photo = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shoes = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SilverMerchant = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Software = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoftwareVideoGames = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SportingGoods = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tools = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Toys = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnboxVideo = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VHS = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VideoGames = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Watches = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wireless = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WirelessAccessories = 54,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AmazonProxyService.IAmazonService")]
    public interface IAmazonService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAmazonService/GetData", ReplyAction="http://tempuri.org/IAmazonService/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAmazonService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAmazonService/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        Mono.Api.AmazonClient.AmazonProxyService.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAmazonService/ItemSearch", ReplyAction="http://tempuri.org/IAmazonService/ItemSearchResponse")]
        System.IAsyncResult BeginItemSearch(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType, int itemPage, System.AsyncCallback callback, object asyncState);
        
        string EndItemSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAmazonService/AvailableTypes", ReplyAction="http://tempuri.org/IAmazonService/AvailableTypesResponse")]
        System.IAsyncResult BeginAvailableTypes(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> EndAvailableTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAmazonService/AvailableCountries", ReplyAction="http://tempuri.org/IAmazonService/AvailableCountriesResponse")]
        System.IAsyncResult BeginAvailableCountries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> EndAvailableCountries(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmazonServiceChannel : Mono.Api.AmazonClient.AmazonProxyService.IAmazonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mono.Api.AmazonClient.AmazonProxyService.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mono.Api.AmazonClient.AmazonProxyService.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AvailableTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AvailableTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AvailableCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AvailableCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmazonServiceClient : System.ServiceModel.ClientBase<Mono.Api.AmazonClient.AmazonProxyService.IAmazonService>, Mono.Api.AmazonClient.AmazonProxyService.IAmazonService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemSearchDelegate;
        
        private EndOperationDelegate onEndItemSearchDelegate;
        
        private System.Threading.SendOrPostCallback onItemSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginAvailableTypesDelegate;
        
        private EndOperationDelegate onEndAvailableTypesDelegate;
        
        private System.Threading.SendOrPostCallback onAvailableTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAvailableCountriesDelegate;
        
        private EndOperationDelegate onEndAvailableCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onAvailableCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AmazonServiceClient() : 
                base(AmazonServiceClient.GetDefaultBinding(), AmazonServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public AmazonServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AmazonServiceClient.GetBindingForEndpoint(endpointConfiguration), AmazonServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public AmazonServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AmazonServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public AmazonServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AmazonServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public AmazonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<ItemSearchCompletedEventArgs> ItemSearchCompleted;
        
        public event System.EventHandler<AvailableTypesCompletedEventArgs> AvailableTypesCompleted;
        
        public event System.EventHandler<AvailableCountriesCompletedEventArgs> AvailableCountriesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.BeginGetDataUsingDataContract(Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mono.Api.AmazonClient.AmazonProxyService.CompositeType Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite = ((Mono.Api.AmazonClient.AmazonProxyService.CompositeType)(inValues[0]));
            return ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            Mono.Api.AmazonClient.AmazonProxyService.CompositeType retVal = ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.BeginItemSearch(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType, int itemPage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemSearch(countryType, indexType, itemPage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.EndItemSearch(System.IAsyncResult result) {
            return base.Channel.EndItemSearch(result);
        }
        
        private System.IAsyncResult OnBeginItemSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType = ((Mono.Api.AmazonClient.AmazonProxyService.CountryType)(inValues[0]));
            Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType = ((Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType)(inValues[1]));
            int itemPage = ((int)(inValues[2]));
            return ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).BeginItemSearch(countryType, indexType, itemPage, callback, asyncState);
        }
        
        private object[] OnEndItemSearch(System.IAsyncResult result) {
            string retVal = ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).EndItemSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemSearchCompleted(object state) {
            if ((this.ItemSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemSearchCompleted(this, new ItemSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemSearchAsync(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType, int itemPage) {
            this.ItemSearchAsync(countryType, indexType, itemPage, null);
        }
        
        public void ItemSearchAsync(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType, int itemPage, object userState) {
            if ((this.onBeginItemSearchDelegate == null)) {
                this.onBeginItemSearchDelegate = new BeginOperationDelegate(this.OnBeginItemSearch);
            }
            if ((this.onEndItemSearchDelegate == null)) {
                this.onEndItemSearchDelegate = new EndOperationDelegate(this.OnEndItemSearch);
            }
            if ((this.onItemSearchCompletedDelegate == null)) {
                this.onItemSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemSearchCompleted);
            }
            base.InvokeAsync(this.onBeginItemSearchDelegate, new object[] {
                        countryType,
                        indexType,
                        itemPage}, this.onEndItemSearchDelegate, this.onItemSearchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.BeginAvailableTypes(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAvailableTypes(countryType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.EndAvailableTypes(System.IAsyncResult result) {
            return base.Channel.EndAvailableTypes(result);
        }
        
        private System.IAsyncResult OnBeginAvailableTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType = ((Mono.Api.AmazonClient.AmazonProxyService.CountryType)(inValues[0]));
            return ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).BeginAvailableTypes(countryType, callback, asyncState);
        }
        
        private object[] OnEndAvailableTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> retVal = ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).EndAvailableTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAvailableTypesCompleted(object state) {
            if ((this.AvailableTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AvailableTypesCompleted(this, new AvailableTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AvailableTypesAsync(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType) {
            this.AvailableTypesAsync(countryType, null);
        }
        
        public void AvailableTypesAsync(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, object userState) {
            if ((this.onBeginAvailableTypesDelegate == null)) {
                this.onBeginAvailableTypesDelegate = new BeginOperationDelegate(this.OnBeginAvailableTypes);
            }
            if ((this.onEndAvailableTypesDelegate == null)) {
                this.onEndAvailableTypesDelegate = new EndOperationDelegate(this.OnEndAvailableTypes);
            }
            if ((this.onAvailableTypesCompletedDelegate == null)) {
                this.onAvailableTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAvailableTypesCompleted);
            }
            base.InvokeAsync(this.onBeginAvailableTypesDelegate, new object[] {
                        countryType}, this.onEndAvailableTypesDelegate, this.onAvailableTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.BeginAvailableCountries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAvailableCountries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> Mono.Api.AmazonClient.AmazonProxyService.IAmazonService.EndAvailableCountries(System.IAsyncResult result) {
            return base.Channel.EndAvailableCountries(result);
        }
        
        private System.IAsyncResult OnBeginAvailableCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).BeginAvailableCountries(callback, asyncState);
        }
        
        private object[] OnEndAvailableCountries(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> retVal = ((Mono.Api.AmazonClient.AmazonProxyService.IAmazonService)(this)).EndAvailableCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAvailableCountriesCompleted(object state) {
            if ((this.AvailableCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AvailableCountriesCompleted(this, new AvailableCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AvailableCountriesAsync() {
            this.AvailableCountriesAsync(null);
        }
        
        public void AvailableCountriesAsync(object userState) {
            if ((this.onBeginAvailableCountriesDelegate == null)) {
                this.onBeginAvailableCountriesDelegate = new BeginOperationDelegate(this.OnBeginAvailableCountries);
            }
            if ((this.onEndAvailableCountriesDelegate == null)) {
                this.onEndAvailableCountriesDelegate = new EndOperationDelegate(this.OnEndAvailableCountries);
            }
            if ((this.onAvailableCountriesCompletedDelegate == null)) {
                this.onAvailableCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAvailableCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginAvailableCountriesDelegate, null, this.onEndAvailableCountriesDelegate, this.onAvailableCountriesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Mono.Api.AmazonClient.AmazonProxyService.IAmazonService CreateChannel() {
            return new AmazonServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.wsHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.wsHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://apps.mono-comp.com/AmazonProxyService2/Mono.Api.AmazonProxyService.AmazonS" +
                        "ervice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AmazonServiceClient.GetBindingForEndpoint(EndpointConfiguration.wsHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AmazonServiceClient.GetEndpointAddress(EndpointConfiguration.wsHttpBinding_IService1);
        }
        
        private class AmazonServiceClientChannel : ChannelBase<Mono.Api.AmazonClient.AmazonProxyService.IAmazonService>, Mono.Api.AmazonClient.AmazonProxyService.IAmazonService {
            
            public AmazonServiceClientChannel(System.ServiceModel.ClientBase<Mono.Api.AmazonClient.AmazonProxyService.IAmazonService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(Mono.Api.AmazonClient.AmazonProxyService.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public Mono.Api.AmazonClient.AmazonProxyService.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mono.Api.AmazonClient.AmazonProxyService.CompositeType _result = ((Mono.Api.AmazonClient.AmazonProxyService.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginItemSearch(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType indexType, int itemPage, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = countryType;
                _args[1] = indexType;
                _args[2] = itemPage;
                System.IAsyncResult _result = base.BeginInvoke("ItemSearch", _args, callback, asyncState);
                return _result;
            }
            
            public string EndItemSearch(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ItemSearch", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAvailableTypes(Mono.Api.AmazonClient.AmazonProxyService.CountryType countryType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = countryType;
                System.IAsyncResult _result = base.BeginInvoke("AvailableTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> EndAvailableTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType> _result = ((System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.SearchIndexType>)(base.EndInvoke("AvailableTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAvailableCountries(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("AvailableCountries", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> EndAvailableCountries(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType> _result = ((System.Collections.ObjectModel.ObservableCollection<Mono.Api.AmazonClient.AmazonProxyService.CountryType>)(base.EndInvoke("AvailableCountries", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            wsHttpBinding_IService1,
        }
    }
}
